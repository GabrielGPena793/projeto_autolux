{
	"info": {
		"_postman_id": "37e5b348-71dd-452f-b6d5-b5d5bed91344",
		"name": "OpenAPI definition",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18522124"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "products",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "find By Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Acura NSX\");\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Carrinho\");\r",
													"});\r",
													"\r",
													"pm.test(\"Retorno id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).not.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/33",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"33"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-42893607",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Retorno id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).not.null;\r",
													"});\r",
													"\r",
													"pm.test(\"Erro esperado\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Forbidden\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/40",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"40"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-42893607",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "add Images",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": -12366563,\n    \"url\": \"in ipsum\"\n  },\n  {\n    \"id\": 77079593,\n    \"url\": \"qui et vol\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-42893607",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"id\": -81467101,\n    \"url\": \"dolore et\"\n  },\n  {\n    \"id\": 9079060,\n    \"url\": \"laborum cupidatat\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-42893607",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "city",
							"item": [
								{
									"name": "find All Products By City",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Rolls-Royce Dawn\");\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Acura NSX\");\r",
													"});\r",
													"\r",
													"pm.test(\"Retorno id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).not.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/city?id=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"city"
											],
											"query": [
												{
													"key": "id",
													"value": "5"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/products/city?id=-42893607&page=<integer>&size=<integer>&sort=<string>,<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														"city"
													],
													"query": [
														{
															"key": "id",
															"value": "-42893607"
														},
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "size",
															"value": "<integer>"
														},
														{
															"key": "sort",
															"value": "<string>,<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "find By Name Between Date",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/city/date?cityId=-42893607&init=in sit laborum proident&end=in sit laborum proident",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"city",
												"date"
											],
											"query": [
												{
													"key": "cityId",
													"value": "-42893607",
													"description": "(Required) "
												},
												{
													"key": "init",
													"value": "in sit laborum proident",
													"description": "(Required) "
												},
												{
													"key": "end",
													"value": "in sit laborum proident",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/products/city/date?cityId=-42893607&init=in sit laborum proident&end=in sit laborum proident",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														"city",
														"date"
													],
													"query": [
														{
															"key": "cityId",
															"value": "-42893607"
														},
														{
															"key": "init",
															"value": "in sit laborum proident"
														},
														{
															"key": "end",
															"value": "in sit laborum proident"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "find All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Acura NSX\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"HB20\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/products?page=<integer>&size=<integer>&sort=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "sort",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Erro esperado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Method Not Allowed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2NTgwNTEyMzcsImV4cCI6MTY1ODA1NDgzNywiYXV0aG9yaXRpZXMiOlsiUk9MRV9VU0VSUyIsIlJPTEVfTUFOQUdFUlMiXX0.uXTm9fyxVkoD-Tb60TvgbEQEE2kEGtYzmpCCrUz0nI6nIqUM8CnN0qd5TOMTL7ijq_Sy2CI5hOCJmx2SdUZhcw",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Carrinho\",\n  \"description\": \"carrinho teste\",\n  \"category\": \"Conversíveis\",\n  \"city\": \"Manaus\",\n  \"characteristics\": [\n    {\n      \"name\": \"Potência\",\n      \"description\": \"500 cv AWD\"\n    },\n    {\n      \"name\": \"Motor\",\n      \"description\": \"3.5L Twin-Turbo V-6\"\n    }\n  ],\n  \"imageDTOS\": [\n    {\n      \"url\": \"image.png\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/products/33",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products",
										"33"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 7488931,\n  \"name\": \"consequat mollit voluptate\",\n  \"description\": \"incididunt veniam deserunt\",\n  \"category\": \"qui ullamco voluptate aliqua\",\n  \"city\": \"nisi in\",\n  \"characteristics\": [\n    {\n      \"name\": \"eu Lorem est\",\n      \"description\": \"Lorem in\"\n    },\n    {\n      \"name\": \"proident a\",\n      \"description\": \"mollit non dolore est do\"\n    }\n  ],\n  \"imageDTOS\": [\n    {\n      \"id\": -6881868,\n      \"url\": \"magna sit aute\"\n    },\n    {\n      \"id\": -48022231,\n      \"url\": \"do minim consequat\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Carrinho\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(score);\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2NTc4NjgxMTEsImV4cCI6MTY1Nzg3MTcxMSwiYXV0aG9yaXRpZXMiOlsiUk9MRV9VU0VSUyIsIlJPTEVfTUFOQUdFUlMiXX0.STsI0mqZCzS5mbCFvxI3Px9mo4Jego2jS_uh_t95j0Yr6mQQ4ss2pHzDxvI_Q9ux5LO_1-m-Zitdg58RJeZ-Lg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Carrinho\",\n  \"description\": \"carrinho teste\",\n  \"category\": \"Conversíveis\",\n  \"city\": \"Recife\",\n  \"characteristics\": [\n    {\n      \"name\": \"Potência\",\n      \"description\": \"500 cv AWD\"\n    },\n    {\n      \"name\": \"Motor\",\n      \"description\": \"3.5L Twin-Turbo V-6\"\n    }\n  ],\n  \"imageDTOS\": [\n    {\n      \"url\": \"image.png\"\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 7488931,\n  \"name\": \"consequat mollit voluptate\",\n  \"description\": \"incididunt veniam deserunt\",\n  \"category\": \"qui ullamco voluptate aliqua\",\n  \"city\": \"nisi in\",\n  \"characteristics\": [\n    {\n      \"name\": \"eu Lorem est\",\n      \"description\": \"Lorem in\"\n    },\n    {\n      \"name\": \"proident a\",\n      \"description\": \"mollit non dolore est do\"\n    }\n  ],\n  \"imageDTOS\": [\n    {\n      \"id\": -6881868,\n      \"url\": \"magna sit aute\"\n    },\n    {\n      \"id\": -48022231,\n      \"url\": \"do minim consequat\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "product Score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Erro esperado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Forbidden\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userEmail\": \"elit Lorem ullamco laborum veniam\",\n  \"productId\": 97841667,\n  \"score\": 19138423.90962687\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/products/score",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products",
										"score"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userEmail\": \"elit Lorem ullamco laborum veniam\",\n  \"productId\": 97841667,\n  \"score\": 19138423.90962687\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products/score",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"score"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "find All Between Dates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/products/date?init=in sit laborum proident&end=in sit laborum proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products",
										"date"
									],
									"query": [
										{
											"key": "init",
											"value": "in sit laborum proident",
											"description": "(Required) "
										},
										{
											"key": "end",
											"value": "in sit laborum proident",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/products/date?init=in sit laborum proident&end=in sit laborum proident",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"date"
											],
											"query": [
												{
													"key": "init",
													"value": "in sit laborum proident"
												},
												{
													"key": "end",
													"value": "in sit laborum proident"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "find All Products By Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Chevy Corvette C8\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Carrinho\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/products/category?qualification=Coupes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products",
										"category"
									],
									"query": [
										{
											"key": "qualification",
											"value": "Coupes"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/products/category?qualification=in sit laborum proident&page=<integer>&size=<integer>&sort=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												"category"
											],
											"query": [
												{
													"key": "qualification",
													"value": "in sit laborum proident"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "sort",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "cities",
					"item": [
						{
							"name": "find All 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"São Paulo\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Brasília\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cities"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/cities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "update 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Brasil\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 8,\n  \"name\": \"Recife\",\n  \"country\": \"Brasil\",\n  \"longitude\": -50992695.061446235,\n  \"latitude\": 55164515.54649225\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cities"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 659354,\n  \"name\": \"sit do reprehenderit\",\n  \"country\": \"Excepteur est\",\n  \"longitude\": -50992695.061446235,\n  \"latitude\": 55164515.54649225\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Porto Alegre\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Brasil\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Porto Alegre\",\n  \"country\": \"Brasil\",\n  \"longitude\": -50992695.061446235,\n  \"latitude\": 55164515.54649225\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cities"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 659354,\n  \"name\": \"sit do reprehenderit\",\n  \"country\": \"Excepteur est\",\n  \"longitude\": -50992695.061446235,\n  \"latitude\": 55164515.54649225\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "find All 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Coupes\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Sportivo\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "update 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"sport\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"AB\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 7,  \n  \"qualification\": \"AB\",\n  \"description\": \"Nova\",\n  \"imageUrl\": \"img.png\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -64259058,\n  \"qualification\": \"incididunt\",\n  \"description\": \"ut sit\",\n  \"imageUrl\": \"do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"sport\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qualification\": \"Sport\",\n  \"description\": \"sport teste\",\n  \"imageUrl\": \"sport.png\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -64259058,\n  \"qualification\": \"incididunt\",\n  \"description\": \"ut sit\",\n  \"imageUrl\": \"do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "delete 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem esperada\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Category not found for this id\");\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Sport\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/categories/6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories",
										"6"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-42893607",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "characteristics",
					"item": [
						{
							"name": "find All 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Velocidade máxima\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Combustível\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/characteristics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"characteristics"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/characteristics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"characteristics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"óleo\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Air Bags\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Air Bags\",\n  \"icon\": \"ut mollit sit anim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/characteristics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"characteristics"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -68918781,\n  \"name\": \"enim\",\n  \"icon\": \"ut mollit sit anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/characteristics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"characteristics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bookings",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "find By Id 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Manaus\");\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Recife\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code é 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Retorno id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).not.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"1"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-42893607",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "delete By Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"/v1/bookings/10\");\r",
													"});\r",
													"\r",
													"pm.test(\"O body contém a string...\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Book 1\");\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem esperada\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Booking not found!\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"10"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/bookings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bookings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-42893607",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "create 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Date\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"07\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2NTgwODUwNzAsImV4cCI6MTY1ODA4ODY3MCwiYXV0aG9yaXRpZXMiOlsiUk9MRV9VU0VSUyIsIlJPTEVfTUFOQUdFUlMiXX0.aFRolmMPOyAbrnso0tlvUygG5J79VArowngFGkBHUacMRA1-5lkRx7thv2UviV2fgjfrbMceJW6b8M4-IYF-bA",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startTime\": \"2022-07-16T08:28:29.297Z\",\n  \"startDate\": \"2022-07-16\",\n  \"endDate\": \"2022-07-17\",\n  \"email\": \"test@hotmail.com\",\n  \"productId\":2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startTime\": \"1984-05-25T08:28:29.297Z\",\n  \"startDate\": \"1971-09-03\",\n  \"endDate\": \"1993-01-16\",\n  \"email\": \"sunt eiusmod ut\",\n  \"productId\": -98644468\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bookings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "find All By User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"test\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Acura NSX\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings",
										"1"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-42893607",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "find All By Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Aston Martin Vantage\");\r",
											"});\r",
											"\r",
											"pm.test(\"O body contém a string...\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Acura NSX\");\r",
											"});\r",
											"\r",
											"pm.test(\"Retorno id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/product/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings",
										"product",
										"2"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-42893607",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "post User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code é 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Luciana\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Luigi\");\r",
									"});\r",
									"\r",
									"pm.test(\"Retorno id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Luciana\",\n  \"lastname\": \"Rizzo\",\n  \"email\": \"lu@gmail.com\",\n  \"password\": \"112233\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi ullamco labore non\",\n  \"lastname\": \"Ut consectetur\",\n  \"email\": \"dolor do\",\n  \"password\": \"do occaecat labore eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"O tempo de resposta é menor que 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"O body contém a string...\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"USERS\");\r",
							"});\r",
							"\r",
							"pm.test(\"O body contém a string...\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"test\");\r",
							"});\r",
							"\r",
							"pm.test(\"Retorno id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).not.null;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"luigi@gmail.com\",\n  \"password\": \"112233\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"enim\",\n  \"password\": \"incididunt laborum in velit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://kantutinhatest.herokuapp.com",
			"type": "string"
		}
	]
}